{
    "name":  "miner",
    "version":  "1.0.0",
    "description":  "",
    "main":  "index.js",
    "scripts":  {
                    "mine":  "tsx facet-miner.ts",
                    "mine:sepolia":  "tsx switch-network.ts sepolia \u0026\u0026 tsx facet-miner.ts",
                    "mine:mainnet":  "tsx switch-network.ts mainnet \u0026\u0026 tsx facet-miner.ts",
                    "auto:sepolia":  "tsx switch-network.ts sepolia \u0026\u0026 tsx facet-miner.ts",
                    "auto:mainnet":  "tsx switch-network.ts mainnet \u0026\u0026 tsx facet-miner.ts",
                    "test:mine:sepolia":  "tsx switch-network.ts sepolia \u0026\u0026 tsx test-mine-sepolia.ts",
                    "test:mine:mainnet:dry":  "tsx switch-network.ts mainnet \u0026\u0026 tsx test-mine-mainnet-dry.ts",
                    "test:trade:dry":  "tsx test-trade-dry.ts",
                    "test:trade:smoke":  "tsx switch-network.ts mainnet \u0026\u0026 tsx test-trade-smoke.ts",
                    "trade:live":  "tsx switch-network.ts mainnet \u0026\u0026 tsx auto-trader.ts",
                    "pipeline":  "tsx mine-wrap-sell.ts",
                    "pipeline:mainnet":  "tsx switch-network.ts mainnet \u0026\u0026 tsx mine-wrap-sell.ts",
                    "pipeline:sepolia":  "tsx switch-network.ts sepolia \u0026\u0026 tsx mine-wrap-sell.ts",
                    "wrap:wfct":  "tsx wrap-wfct.ts",
                    "check:allowance":  "tsx check-allowance.ts",
                    "approve:router":  "tsx approve-only.ts",
                    "pair:inspect":  "tsx pair-inspect.ts",
                    "router:inspect":  "tsx router-inspect.ts",
                    "pair:find:routers":  "tsx find-router-from-pair.ts",
                    "router:path":  "tsx router-path.ts",
                    "tx:decode":  "tsx decode-tx.ts",
                    "auto:trade":  "tsx auto-trader.ts",
                    "smoke:swap":  "tsx smoke-swap.ts",
                    "start:miner":  "tsx src/cli.ts",
                    "start:arbiter":  "tsx src/cli-arbiter.ts",
                    "start:arbiter:sepolia":  "tsx switch-network.ts sepolia \u0026\u0026 tsx src/cli-arbiter.ts",
                    "start:arbiter:mainnet":  "tsx switch-network.ts mainnet \u0026\u0026 tsx src/cli-arbiter.ts",
                    "dry:arbiter":  "tsx src/cli-arbiter.ts --dry-run",
                    "test":  "vitest run",
                    "swap":  "tsx facet-swapper.ts",
                    "l2hash":  "tsx l1-to-l2-hash.ts",
                    "network":  "tsx switch-network.ts",
                    "network:show":  "tsx switch-network.ts show",
                    "network:sepolia":  "tsx switch-network.ts sepolia",
                    "network:mainnet":  "tsx switch-network.ts mainnet",
                    "_test:old":  "echo \"Error: no test specified\" \u0026\u0026 exit 1",
                    "estimate:fct":  "tsx estimate-fct.ts"
                },
    "keywords":  [

                 ],
    "author":  "",
    "license":  "ISC",
    "packageManager":  "pnpm@10.11.0",
    "dependencies":  {
                         "@0xfacet/sdk":  "^0.4.11",
                         "boxen":  "^8.0.1",
                         "chalk":  "^5.5.0",
                         "cli-progress":  "^3.12.0",
                         "dotenv":  "^17.2.1",
                         "figlet":  "^1.8.2",
                         "gradient-string":  "^3.0.0",
                         "nanospinner":  "^1.2.2",
                         "ora":  "^8.2.0",
                         "viem":  "^2.33.2"
                     },
    "devDependencies":  {
                            "@types/node":  "^24.2.0",
                            "vitest":  "^2.0.5",
                            "tsx":  "^4.20.3",
                            "typescript":  "^5.9.2"
                        }
}

